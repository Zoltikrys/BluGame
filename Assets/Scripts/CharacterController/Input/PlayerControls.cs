//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/CharacterController/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""PlayerLocomotionMap"",
            ""id"": ""76fb127d-ce5b-4be2-997e-93eb05f24e04"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""e7a7d193-e24e-4f12-9dbc-7fa46b4a23e3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""98958bde-e87b-4431-8cfc-8afadb3b54dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleMagnetAbility"",
                    ""type"": ""Button"",
                    ""id"": ""00522396-10a2-46ec-9c07-f552f6ab2e43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""305c48b2-cb7c-444e-bfde-40f917bc1ad7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleShootMode"",
                    ""type"": ""Button"",
                    ""id"": ""186633a7-76ec-42cb-af52-93980f8ab351"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleGoggles"",
                    ""type"": ""Button"",
                    ""id"": ""53eb9e6a-287d-4080-a12a-c8c49fe7d63b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoggleScroll"",
                    ""type"": ""Value"",
                    ""id"": ""81517b4d-c3de-4b86-80ee-92e6454c880b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GoggleScrollLeftKey"",
                    ""type"": ""Button"",
                    ""id"": ""09e9852e-1841-4113-857f-0e44c2855b18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoggleScrollrightKey"",
                    ""type"": ""Button"",
                    ""id"": ""f2e43a7a-804d-487d-a3a0-299ca6dcaa80"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""ed39f1d9-f984-4194-a20a-4c7359a7079a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d2fe2ab2-f56b-46bb-aa91-f0668447f250"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6b937c41-63cb-4874-9617-76135207a864"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5dde815a-5c11-4b35-bb1e-4078703a35fc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5f730bbb-b31d-43ad-8c8d-519c451f31e8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick (Switch Pro)"",
                    ""id"": ""2c7fd35d-1366-4c75-9c82-133c39a980a2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""64343b6e-9b5c-44d0-a517-353b900e0360"",
                    ""path"": ""<SwitchProControllerHID>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bef4ad49-0282-4d3b-a97b-cb9090e1b598"",
                    ""path"": ""<SwitchProControllerHID>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8e9eadea-4eb6-467c-a337-9fd2d26d9fa6"",
                    ""path"": ""<SwitchProControllerHID>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""62802726-e3ca-4f2e-a309-dd01120eac30"",
                    ""path"": ""<SwitchProControllerHID>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick (Gamepad)"",
                    ""id"": ""0235f75d-ba6e-4f55-8f50-e0e327381166"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""686b58a7-d05a-4e4c-8c0f-8c4e2330e0c4"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4094eaf5-8bcc-47f1-9dfb-3658d25eeb58"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""20dfdaf6-4e1b-4678-8dcd-6462c0e0faa5"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""25ff4faa-4e27-4f69-b49a-3f94e3481b61"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7bbc03d3-53d5-4727-8297-592974ac6193"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb685205-d0c4-49e7-974e-2f32a8010aaf"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7524f8f2-8f65-4bf7-9eb3-236bd159e3fb"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7763eaf4-71c0-4618-a4f0-c45dd674d4ec"",
                    ""path"": ""<SwitchProControllerHID>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""587a8171-08bb-4f2a-b541-7b2f9f850bb4"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleShootMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb0aae34-2e27-4d89-880b-b5edf16be194"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleShootMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6be6300d-207b-41d8-85f6-2facfc83fae2"",
                    ""path"": ""<SwitchProControllerHID>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleShootMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4a9e588-8108-4321-a0d5-7508e666f163"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleGoggles"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ab02ae9-cfb9-4dd9-8d63-2b242208718d"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleGoggles"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a60c5a73-a8c4-4249-abb8-0b549fa4af54"",
                    ""path"": ""<SwitchProControllerHID>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleGoggles"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b40f4d3-61c7-4c9d-a937-d053a9d34819"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoggleScrollLeftKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eea7d6d6-7a78-45a7-848a-508baa39612e"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoggleScrollLeftKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10ceecc1-bb60-46d4-bd73-c68942673b29"",
                    ""path"": ""<SwitchProControllerHID>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoggleScrollLeftKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10d1c53d-4b7c-4453-89f1-124c6b08b6d2"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoggleScrollrightKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bb99c6d-fc86-4f91-963d-2ccbfc571dac"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoggleScrollrightKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""293737f1-1b57-41ed-a42d-44f5f41eb713"",
                    ""path"": ""<SwitchProControllerHID>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoggleScrollrightKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03012691-66a4-48ec-93b8-498b1e88d437"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMagnetAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92f56ad7-fc08-48d2-965a-273553bd801e"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMagnetAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14e1ec19-9aef-4ebf-9e0f-c77e6575e5b8"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMagnetAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""902f7828-3e20-48bf-8bf7-22bd03a551fe"",
                    ""path"": ""<SwitchProControllerHID>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMagnetAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4488f174-540d-45cc-b07b-6713d8fe29d2"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoggleScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerLocomotionMap
        m_PlayerLocomotionMap = asset.FindActionMap("PlayerLocomotionMap", throwIfNotFound: true);
        m_PlayerLocomotionMap_Movement = m_PlayerLocomotionMap.FindAction("Movement", throwIfNotFound: true);
        m_PlayerLocomotionMap_Jump = m_PlayerLocomotionMap.FindAction("Jump", throwIfNotFound: true);
        m_PlayerLocomotionMap_ToggleMagnetAbility = m_PlayerLocomotionMap.FindAction("ToggleMagnetAbility", throwIfNotFound: true);
        m_PlayerLocomotionMap_Interact = m_PlayerLocomotionMap.FindAction("Interact", throwIfNotFound: true);
        m_PlayerLocomotionMap_ToggleShootMode = m_PlayerLocomotionMap.FindAction("ToggleShootMode", throwIfNotFound: true);
        m_PlayerLocomotionMap_ToggleGoggles = m_PlayerLocomotionMap.FindAction("ToggleGoggles", throwIfNotFound: true);
        m_PlayerLocomotionMap_GoggleScroll = m_PlayerLocomotionMap.FindAction("GoggleScroll", throwIfNotFound: true);
        m_PlayerLocomotionMap_GoggleScrollLeftKey = m_PlayerLocomotionMap.FindAction("GoggleScrollLeftKey", throwIfNotFound: true);
        m_PlayerLocomotionMap_GoggleScrollrightKey = m_PlayerLocomotionMap.FindAction("GoggleScrollrightKey", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerLocomotionMap
    private readonly InputActionMap m_PlayerLocomotionMap;
    private List<IPlayerLocomotionMapActions> m_PlayerLocomotionMapActionsCallbackInterfaces = new List<IPlayerLocomotionMapActions>();
    private readonly InputAction m_PlayerLocomotionMap_Movement;
    private readonly InputAction m_PlayerLocomotionMap_Jump;
    private readonly InputAction m_PlayerLocomotionMap_ToggleMagnetAbility;
    private readonly InputAction m_PlayerLocomotionMap_Interact;
    private readonly InputAction m_PlayerLocomotionMap_ToggleShootMode;
    private readonly InputAction m_PlayerLocomotionMap_ToggleGoggles;
    private readonly InputAction m_PlayerLocomotionMap_GoggleScroll;
    private readonly InputAction m_PlayerLocomotionMap_GoggleScrollLeftKey;
    private readonly InputAction m_PlayerLocomotionMap_GoggleScrollrightKey;
    public struct PlayerLocomotionMapActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerLocomotionMapActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerLocomotionMap_Movement;
        public InputAction @Jump => m_Wrapper.m_PlayerLocomotionMap_Jump;
        public InputAction @ToggleMagnetAbility => m_Wrapper.m_PlayerLocomotionMap_ToggleMagnetAbility;
        public InputAction @Interact => m_Wrapper.m_PlayerLocomotionMap_Interact;
        public InputAction @ToggleShootMode => m_Wrapper.m_PlayerLocomotionMap_ToggleShootMode;
        public InputAction @ToggleGoggles => m_Wrapper.m_PlayerLocomotionMap_ToggleGoggles;
        public InputAction @GoggleScroll => m_Wrapper.m_PlayerLocomotionMap_GoggleScroll;
        public InputAction @GoggleScrollLeftKey => m_Wrapper.m_PlayerLocomotionMap_GoggleScrollLeftKey;
        public InputAction @GoggleScrollrightKey => m_Wrapper.m_PlayerLocomotionMap_GoggleScrollrightKey;
        public InputActionMap Get() { return m_Wrapper.m_PlayerLocomotionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerLocomotionMapActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerLocomotionMapActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerLocomotionMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerLocomotionMapActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @ToggleMagnetAbility.started += instance.OnToggleMagnetAbility;
            @ToggleMagnetAbility.performed += instance.OnToggleMagnetAbility;
            @ToggleMagnetAbility.canceled += instance.OnToggleMagnetAbility;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @ToggleShootMode.started += instance.OnToggleShootMode;
            @ToggleShootMode.performed += instance.OnToggleShootMode;
            @ToggleShootMode.canceled += instance.OnToggleShootMode;
            @ToggleGoggles.started += instance.OnToggleGoggles;
            @ToggleGoggles.performed += instance.OnToggleGoggles;
            @ToggleGoggles.canceled += instance.OnToggleGoggles;
            @GoggleScroll.started += instance.OnGoggleScroll;
            @GoggleScroll.performed += instance.OnGoggleScroll;
            @GoggleScroll.canceled += instance.OnGoggleScroll;
            @GoggleScrollLeftKey.started += instance.OnGoggleScrollLeftKey;
            @GoggleScrollLeftKey.performed += instance.OnGoggleScrollLeftKey;
            @GoggleScrollLeftKey.canceled += instance.OnGoggleScrollLeftKey;
            @GoggleScrollrightKey.started += instance.OnGoggleScrollrightKey;
            @GoggleScrollrightKey.performed += instance.OnGoggleScrollrightKey;
            @GoggleScrollrightKey.canceled += instance.OnGoggleScrollrightKey;
        }

        private void UnregisterCallbacks(IPlayerLocomotionMapActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @ToggleMagnetAbility.started -= instance.OnToggleMagnetAbility;
            @ToggleMagnetAbility.performed -= instance.OnToggleMagnetAbility;
            @ToggleMagnetAbility.canceled -= instance.OnToggleMagnetAbility;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @ToggleShootMode.started -= instance.OnToggleShootMode;
            @ToggleShootMode.performed -= instance.OnToggleShootMode;
            @ToggleShootMode.canceled -= instance.OnToggleShootMode;
            @ToggleGoggles.started -= instance.OnToggleGoggles;
            @ToggleGoggles.performed -= instance.OnToggleGoggles;
            @ToggleGoggles.canceled -= instance.OnToggleGoggles;
            @GoggleScroll.started -= instance.OnGoggleScroll;
            @GoggleScroll.performed -= instance.OnGoggleScroll;
            @GoggleScroll.canceled -= instance.OnGoggleScroll;
            @GoggleScrollLeftKey.started -= instance.OnGoggleScrollLeftKey;
            @GoggleScrollLeftKey.performed -= instance.OnGoggleScrollLeftKey;
            @GoggleScrollLeftKey.canceled -= instance.OnGoggleScrollLeftKey;
            @GoggleScrollrightKey.started -= instance.OnGoggleScrollrightKey;
            @GoggleScrollrightKey.performed -= instance.OnGoggleScrollrightKey;
            @GoggleScrollrightKey.canceled -= instance.OnGoggleScrollrightKey;
        }

        public void RemoveCallbacks(IPlayerLocomotionMapActions instance)
        {
            if (m_Wrapper.m_PlayerLocomotionMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerLocomotionMapActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerLocomotionMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerLocomotionMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerLocomotionMapActions @PlayerLocomotionMap => new PlayerLocomotionMapActions(this);
    public interface IPlayerLocomotionMapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnToggleMagnetAbility(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnToggleShootMode(InputAction.CallbackContext context);
        void OnToggleGoggles(InputAction.CallbackContext context);
        void OnGoggleScroll(InputAction.CallbackContext context);
        void OnGoggleScrollLeftKey(InputAction.CallbackContext context);
        void OnGoggleScrollrightKey(InputAction.CallbackContext context);
    }
}
